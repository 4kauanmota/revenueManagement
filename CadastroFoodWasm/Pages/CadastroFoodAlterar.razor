@page "/Food_alterar/{Id}"
@using CadastroFoodsWasm.Helpers;
@using CadastroFoodDll.DOs;
@inject NavigationManager NavigationManager

<PageTitle>Cadastro de Foods</PageTitle>

<h1>Foods</h1>

@if (obj == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <EditForm Model="@obj" OnValidSubmit="@Gravar">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <div>
            <div>
                <label class="form-label">Name</label>
                <input class="form-control" @bind="@obj.Name" />
                <ValidationMessage For="() => obj.Name" />
            </div>
            <div>
                <label class="form-label">Weight</label>
                <input class="form-control" @bind="@obj.Weight" />
                <ValidationMessage For="() => obj.Weight" />
            </div>
            <div>
                <label class="form-label">Time</label>
                <input class="form-control" @bind="@obj.Time" />
                <ValidationMessage For="() => obj.Time" />
            </div>
            <div>
                <label class="form-label">Time</label>
                <input class="form-control" @bind="@obj.Time" />
                <ValidationMessage For="() => obj.Time" />
            </div>
            <div class="mt-2">
                <button class="btn btn-success" type="submit">Gravar</button>
                <a class="ml-1 btn btn-secondary" href="./Foods">Voltar</a>
            </div>

            <Imagem Entidade="Food" Id=@Id />
            
        </div>
    </EditForm>
}

@code {
    protected async override Task OnInitializedAsync()
    {        
        obj = await api.RetornarPorIdAsync(Id);
    }

    private AcessoApi<FoodDO> api = new AcessoApi<FoodDO>("api/Food");

    private FoodDO? obj = null;

    [Parameter]
    public string Id { get; set; } = "";

    private async void Gravar()
    {
        await api.AlterarAsync(obj);
        
        NavigationManager.NavigateTo("Foods");
    }
}
